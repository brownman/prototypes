pipe_translate_test(){
( pipe_translate dog )
}
#        cmd="$builtin_translate $lang $str"
#       cmd1="dialog_optional \"$lang\" \"$cmd\""
pipe_translate_motivation(){
str=$( xcowfortune1 )
    ( pipe_translate_random "$str" )
}

pipe_translate_random(){
[ $# -eq 0 ] && { return 1; }
    local str1=$( echo "$@" | cut -d'-' -f1 )
    notify-send1 "$str1"
  # ping1 || { print error "Network is Down!";return 1; }

#    toilet1 "$str1"

    print ok "$FUNCNAME $str1"
#    file_translate="\$builtin_translate"
#    assert file_exist "$file_translate"

    assert file_exist "$file_language"
    echo 1>&2 "[ languages to learn: ] "
    cat1 1>&2 -n $file_language

local lang=$( random_line    $file_language )
        #str1="`cat1 $file_quote | cut -d' ' -f1-${max_words}` "
        local builtin_translate=$( use_sh translate )
        local cmd="$builtin_translate $lang $str1"
#        echo 1>&2 "[cmd] $cmd"
        #( dialog_optional "$line" "$cmd" )

        commander "$cmd" 
#1>/tmp/out 2>/tmp/err

    #file_mission="$dir_self/mission.sh"
    #eval "$file_mission"
}


pipe_translate(){
#set -e
#    set -e
    set -o nounset
    #echo `pwd`
    #alias remind="cat1 /tmp/quote"
    #dir_self=`where_am_i $0`
    #ls -l "$dir_self/translate.sh"
#assert string_has_content file_language

#file_language=$file_language
#commander "ls $file_language"
#commander assert file_exist "$file_language"

#cut the long string and tranlsate only the first part
[ $# -eq 0 ] && { return 1; }
    local str1=$( echo "$@" | cut -d'-' -f1 )
local cmd=''
   #ping1 || { print error "Network is Down!";return 1; }

    #toilet1 "$str1"

#

#    print ok "$FUNCNAME $str1"
#    file_translate="\$builtin_translate"
#    assert file_exist "$file_translate"


#    trace "[ languages to learn: ] "
    cat1    $file_language true
#toilet1 loop
    while read line;do
        #str1="`cat1 $file_quote | cut -d' ' -f1-${max_words}` "
        local cmd="$builtin_translate $line $str1"
        trace "[cmd] $cmd"
        #( dialog_optional "$line" "$cmd" )

        commander $cmd
        #1>/tmp/out 2>/tmp/err
    done < $file_language
    #file_mission="$dir_self/mission.sh"
    #eval "$file_mission"
}
export -f pipe_translate

export -f pipe_translate_random
export -f pipe_translate_motivation
